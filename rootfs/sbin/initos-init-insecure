#!/bin/sh

source /sbin/initos

export PATH="$PATH:/usr/bin:/bin:/usr/sbin:/sbin"

# This script runs in the recovery image, after initrd mounts the 
# signed root - however it is only run when the boot loader is
# not set to secure mode, so UKI is not verified. The SQFS signature
# is still useful for integrity - but doesn't have any security.

# That means:
# - anyone who has access to the machine can read and modify the disk
#  by booting from USB or removing the disk
# - the machine can't be trusted

# It is ok for old laptops used for testing or shared devices
# or doing specialized tasks (camera, etc)

# Main entry point - called by the init script
initos_init() {  
  
  logi "Starting INSECURE INITOS $(uname -r) ${SECURE_MODE}"
  
  # Additional drivers with the real firmware and modules mounted. 
  # Wil the drivers are loaded/settiling, asks for a key - set as MODE - which determines how to load persistent disk.
  load_drivers

  patch_rootfs /boot/efi/install /

  if [ -f /etc/hostname ]; then
    export HOSTNAME=$(cat /etc/hostname) 
    logi "Setting hostname $HOSTNAME"
    hostname "${HOSTNAME}"
  fi

  if [ -f /boot/efi/install/autosetup.sh ]; then 
    source /boot/efi/install/autosetup.sh init
    source /boot/efi/install/autosetup.sh install
  fi 

  run_installer
}

# Add the files from the EFI /install dir to the InitOS rootfs
# 
# The installer will start as a normal InitOS, but without 
# /x mounted
# 
# Normally this is run once, the first time - there is no 
# need to ssh to the machine.
patch_rootfs() {
  # In insecure mode and recovery, /boot/efi/install can keep 
  # network config (physical access would allow root and any config)
  dir=${1:-/boot/efi/install}

  # From EFI, not signed. Alternative is DHCP, also insecure.
  # Recovery SSH. Interfaces and ssh should be different from 
  # normal disk. 
  if [ -f ${dir}/interfaces ]; then
    cp ${dir}/interfaces /etc/network/interfaces
  fi
  if [ -f ${dir}/hostname ]; then
    cp ${dir}/hostname /etc/hostname
    export HOSTNAME=$(cat /etc/hostname) 
  fi
  if [ -f ${dir}/wpa_supplicant.conf ]; then
    cp ${dir}/wpa_supplicant.conf /etc/wpa_supplicant/wpa_supplicant.conf
  fi

}


# If 'INSECURE' partition is not found - start in-memory
# User can manually run the host setup - or use the script.
run_installer() {



  run_standalone_start 
 

  # Experimenting with different ways to autologin and 
  # start sway on an old insecure laptop.
  getty 38400 /dev/tty5 -n -l /bin/sh &
  getty 38400 /dev/tty3 -n -l /sbin/autologin &
  getty 38400 /dev/tty4 -n -l /sbin/autologin.build &

  # exec /bin/sh
  /bin/sh
}

# If running as PID=1 (from initrd): run initos_init or
# a different function (like vm_init)
if [ "$$" = "1" ]; then
  if [ -z ${1+x} ] ; then
    initos_init
  else 
    # Run one of the functions
    "$@"
  fi
else
  "$@"
fi
