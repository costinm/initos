#!/bin/sh

# Setup a VM using the recovery image and initramfs.
# This is useful for testing - but also to setup a VM with a disk and image, or
# recover/fix an image.
#
# Using cloud-hypervisor initially - for more diversity, qemu should also work.
# Planning to include initos as well in a docker image.
#
# Using virtiofs as well.

# Work dir for temp files/cache.
# Can be a btrfs subvolume, or a tmpfs. I have a btrfs mounted on/x/, and use vol
# for 'volumes'.
WORK=${WORK:-/x/initos}

# For running the steps that need a container, use this shared dir and source dir.
# Should be mounted in docker, will be created on the USB/recovery.
SRCDIR=${SRCDIR:-/ws/initos}

set -x
set -e

if [ -z $VM ]; then
  vmsuffix="${0#*setup-vm}"

  if [ -z "$vmsuffix" ]; then
    VM=vm1
  else
    VM=$vmsuffix
  fi
fi

VMDIR=/x/vol/${VM}

mkdisk() {
  mkdir -p ${VMDIR}
  qemu-img create -f raw ${VMDIR}/disk.img 10G
  #dev=$(losetup -f ${VMDIR}/disk.img --show)
  mkfs.btrfs ${VMDIR}/disk.img
  #parted $dev mklabel gpt
}

install() {
  if [ ! -f ${WORK}/virt/ch-remote ]; then
    wget https://github.com/cloud-hypervisor/cloud-hypervisor/releases/download/v41.0/ch-remote -O ${WORK}/virt/ch-remote
  fi
  if [ ! -f ${WORK}/virt/cloud-hypervisor-static ]; then
    wget https://github.com/cloud-hypervisor/cloud-hypervisor/releases/download/v41.0/cloud-hypervisor-static -O ${WORK}/virt/cloud-hypervisor-static
    wget -L https://gitlab.com/virtio-fs/virtiofsd/-/jobs/artifacts/main/download?job=publish -O ${WORK}/virt/virtiofsd.zip
    unzip ${WORK}/virt/virtiofsd.zip -d ${WORK}/virt
    chmod +x ${WORK}/cloud-hypervisor-static
  fi
}

CMD=$1
shift
$CMD "$*"
