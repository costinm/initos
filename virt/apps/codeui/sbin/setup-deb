#!/bin/bash

# Debian as a base, add KasmVNC, i3, chrome and vscode
# This is intended as a semi-secure environment, with Code used 
# for remotes.
set -euo pipefail
set -x 

WORK=${WORK:-/x/initos}

# Will make sure the user exists - useful in pods for
# running as a custom username.
USERNAME=${USERNAME:-build}

export DEBIAN_FRONTEND=noninteractive
APTINSTALL="apt install --assume-yes --no-install-recommends "

all() {
  apt update


  add_base_users
  tools
  add_kasm
  ui
  add_chrome
  add_code

  apt clean
}

# Users built into the docker image. 
add_base_users() {
  local u=${USERNAME:-build}
  local h=${USER_HOME:-/home/${u}}

  # Template home directory.
  mkdir -p /home/log
  mkdir -p /work
  mkdir -p /home

  # For ubuntu based images - there is a default user with 1000
  (userdel ubuntu || true)

  useradd -u ${USERID:-1000} -g users -G users -s /bin/bash \
         -d ${h} ${u} || true
  usermod -p '*' ${u} || true

  groupadd -g 2000 restic || true
  useradd -u 2000 -g restic -G restic -s /bin/bash \
         -d /x/backup restic || true
  # -p takes an encrypted pass - so this disables pass login
  usermod -p '*' restic || true

  mkdir -p ${h}
  chown ${u} ${h}

}

function add_chrome() {
  apt update
  # requires gnupg
  DEBIAN_FRONTEND=noninteractive apt install --assume-yes --no-install-recommends \
        gnupg
  curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
  echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
  apt update

  # Required for encrypted secrets support
  DEBIAN_FRONTEND=noninteractive apt install --assume-yes --no-install-recommends \
          gnome-keyring upower

  # Chrome (for isolated env)
  # Must happen after curl is installed
  # ~100M
  apt-get -y -q install google-chrome-stable 
  #--no-install-recommends
}

function add_code() {
    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg 

    install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg 
    sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'

    rm -f packages.microsoft.gpg 
   
    apt update
  
  apt-get install --assume-yes --no-install-recommends    code
}

function tools() {
  $APTINSTALL wget curl ca-certificates gpg \
     net-tools vim mc tmux \
   git less bash-completion \
   openssh-server 

  # SSH: used by code
}

function ui() {
  # mako: notifications
  # rofi: menus (launch, windows)

  # d-feet -

  # i3 instslls i3-wm, dunst, i3lock, i3status suckless-tools

  # x11vnc
  # others:
  # xsettingsd lxappearance viewinior

  # xfce4-polkit - display auth dialog
  # kitty
  #

  # i3 based UI.
  # Alternatives: openbox, sway

  # last release: 2010: openbox
  # fluxbox is similar - 2015 last release
  
  # obconf: +65M
  # obkey - key config 

  # i3 +10M

  # eterm: 1.3M, but can't find font
  # xfce4-terminal: +74M
  # kitty: 16M

  # Includes x11-common but not xorg
  $APTINSTALL  \
           i3 dbus-x11 desktop-base libdbus-glib-1-2 \
          kitty i3status rofi tint2 alttab d-feet alttab
  # For code: 
  # 12M gtk
  $APTINSTALL libnss3 libatk1.0-0 libatk-bridge2.0-0

  #echo "exec /etc/X11/Xsession /usr/bin/i3" > /etc/chrome-remote-desktop-session
}


function add_kasm() {
  KASM_VER=${KASM_VER:-1.3.3}

  local DIST=${1:-bookworm}

  # 220M
  curl -fsSL -o /tmp/kasmvnc.deb \
    https://github.com/kasmtech/KasmVNC/releases/download/v${KASM_VER}/kasmvncserver_${DIST}_${KASM_VER}_amd64.deb

  $APTINSTALL /tmp/kasmvnc.deb
  $APTINSTALL libdatetime-perl  
  rm /tmp/kasmvnc.deb

}

C=${1}
shift
$C "$@"
