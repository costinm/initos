# syntax=docker/dockerfile:1.10

ARG BASE=debian:bookworm-slim

# Build a dev pod - initially based on Istio build-tools.
# Istio has /home - pre-filled with a rustup
# as part of the docker image, any change will be lost
#
# Expects source code for istio /work

# I'm adding a UI and a persistent volume on /x
# Home is moved to /x/home/$USERNAME - so it can be persistent.

# Also as a separate volume: /var/lib/docker
# The default startup script can also be mounted as volume for iterating.
# It will detect if docker is installed in base and start it.

FROM ${BASE} as base

# Required if base is setting a different user ( like sunshine )
USER root

ENV LANG C.UTF-8

COPY recovery/* /

# Will execute a stage using the podinstall script
ARG STAGE=add_tools

# Default values - will be used in the podinstall script
ARG DEV=base
ARG REMOTE_DESKTOP=kasm
ARG USERNAME=build

# Istio base sets it to /home - need to copy or link the files
ENV HOME /x/home/${USERNAME}

ENV FONTCONFIG_PATH /etc/fonts

ENV PATH /sbin:/usr/sbin:/bin:/usr/bin:/x/sync/app/bin:/x/sync/app/home/bin:/usr/local/bin:${PATH}

WORKDIR /x/home/${USERNAME}

# Not installing accessibility dbus
ENV NO_AT_BRIDGE 1

RUN setup-deb docker_run_install ${STAGE}

# Context should be in the home directory - all tools should be in bin
# Otherwise sshd will consider the account locked
# Istio dev has /home directory
# Assume a volume will be mounted on /x with R/W state.

# Default is set for running in K8S / CloudRun / etc.
# Will detect if running as non-root.
ENTRYPOINT ["/sbin/init-pod"]
CMD ["pod"]
